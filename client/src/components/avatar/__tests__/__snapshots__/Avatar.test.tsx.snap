// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Avatar Unit Tests Render Avatar 1`] = `
<Persona
  name="JZ"
>
  <span
    className="avatar-dropdown"
  >
    <Dropdown
      mouseEnterDelay={0.15}
      mouseLeaveDelay={0.1}
      overlay={
        <Menu
          className=""
          focusable={false}
          prefixCls="ant-menu"
          style={
            Object {
              "width": 200,
            }
          }
          theme="light"
        >
          <MenuItem>
            <a
              href="/logout"
              onClick={[Function]}
              style={
                Object {
                  "color": "inherit",
                }
              }
            >
              <Icon
                style={
                  Object {
                    "marginRight": "8px",
                  }
                }
                type="logout"
              />
              Log Out
            </a>
          </MenuItem>
        </Menu>
      }
      placement="bottomLeft"
      prefixCls="ant-dropdown"
      trigger={
        Array [
          "click",
        ]
      }
    >
      <Dropdown
        defaultVisible={false}
        mouseEnterDelay={0.15}
        mouseLeaveDelay={0.1}
        onVisibleChange={[Function]}
        overlay={
          <Menu
            className=""
            expandIcon={
              <span
                className="ant-dropdown-menu-submenu-arrow"
              >
                <Icon
                  className="ant-dropdown-menu-submenu-arrow-icon"
                  type="right"
                />
              </span>
            }
            focusable={false}
            mode="vertical"
            prefixCls="ant-menu"
            selectable={false}
            style={
              Object {
                "width": 200,
              }
            }
            theme="light"
          >
            <MenuItem>
              <a
                href="/logout"
                onClick={[Function]}
                style={
                  Object {
                    "color": "inherit",
                  }
                }
              >
                <Icon
                  style={
                    Object {
                      "marginRight": "8px",
                    }
                  }
                  type="logout"
                />
                Log Out
              </a>
            </MenuItem>
          </Menu>
        }
        overlayClassName=""
        overlayStyle={Object {}}
        placement="bottomLeft"
        prefixCls="ant-dropdown"
        showAction={Array []}
        transitionName="slide-up"
        trigger={
          Array [
            "click",
          ]
        }
      >
        <Trigger
          action={
            Array [
              "click",
            ]
          }
          afterPopupVisibleChange={[Function]}
          blurDelay={0.15}
          builtinPlacements={
            Object {
              "bottomCenter": Object {
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tc",
                  "bc",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomLeft": Object {
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tl",
                  "bl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "bottomRight": Object {
                "offset": Array [
                  0,
                  4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "tr",
                  "br",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topCenter": Object {
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bc",
                  "tc",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topLeft": Object {
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "bl",
                  "tl",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
              "topRight": Object {
                "offset": Array [
                  0,
                  -4,
                ],
                "overflow": Object {
                  "adjustX": 1,
                  "adjustY": 1,
                },
                "points": Array [
                  "br",
                  "tr",
                ],
                "targetOffset": Array [
                  0,
                  0,
                ],
              },
            }
          }
          defaultPopupVisible={false}
          defaultVisible={false}
          destroyPopupOnHide={false}
          focusDelay={0}
          getDocument={[Function]}
          getPopupClassNameFromAlign={[Function]}
          hideAction={Array []}
          mask={false}
          maskClosable={true}
          mouseEnterDelay={0.15}
          mouseLeaveDelay={0.1}
          onPopupAlign={[Function]}
          onPopupVisibleChange={[Function]}
          onVisibleChange={[Function]}
          overlay={
            <Menu
              className=""
              expandIcon={
                <span
                  className="ant-dropdown-menu-submenu-arrow"
                >
                  <Icon
                    className="ant-dropdown-menu-submenu-arrow-icon"
                    type="right"
                  />
                </span>
              }
              focusable={false}
              mode="vertical"
              prefixCls="ant-menu"
              selectable={false}
              style={
                Object {
                  "width": 200,
                }
              }
              theme="light"
            >
              <MenuItem>
                <a
                  href="/logout"
                  onClick={[Function]}
                  style={
                    Object {
                      "color": "inherit",
                    }
                  }
                >
                  <Icon
                    style={
                      Object {
                        "marginRight": "8px",
                      }
                    }
                    type="logout"
                  />
                  Log Out
                </a>
              </MenuItem>
            </Menu>
          }
          popup={
            <Menu
              className=""
              expandIcon={
                <span
                  className="ant-dropdown-menu-submenu-arrow"
                >
                  <Icon
                    className="ant-dropdown-menu-submenu-arrow-icon"
                    type="right"
                  />
                </span>
              }
              focusable={false}
              mode="vertical"
              onClick={[Function]}
              prefixCls="ant-dropdown-menu"
              selectable={false}
              style={
                Object {
                  "width": 200,
                }
              }
              theme="light"
            >
              <MenuItem>
                <a
                  href="/logout"
                  onClick={[Function]}
                  style={
                    Object {
                      "color": "inherit",
                    }
                  }
                >
                  <Icon
                    style={
                      Object {
                        "marginRight": "8px",
                      }
                    }
                    type="logout"
                  />
                  Log Out
                </a>
              </MenuItem>
            </Menu>
          }
          popupAlign={Object {}}
          popupClassName=""
          popupPlacement="bottomLeft"
          popupStyle={Object {}}
          popupTransitionName="slide-up"
          popupVisible={false}
          prefixCls="ant-dropdown"
          showAction={Array []}
        >
          <Avatar
            className="ant-dropdown-trigger"
            key="trigger"
            onClick={[Function]}
            onMouseDown={[Function]}
            onTouchStart={[Function]}
            prefixCls="ant-avatar"
            shape="circle"
            size="large"
            style={
              Object {
                "backgroundColor": "#71afe5",
                "display": "inline-block",
                "verticalAlign": "middle",
              }
            }
          >
            <span
              className="ant-avatar ant-dropdown-trigger ant-avatar-lg ant-avatar-circle"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "backgroundColor": "#71afe5",
                  "display": "inline-block",
                  "verticalAlign": "middle",
                }
              }
            >
              <span
                className="ant-avatar-string"
                style={
                  Object {
                    "WebkitTransform": "scale(-Infinity)",
                    "display": "inline-block",
                    "left": "calc(50% - 0px)",
                    "msTransform": "scale(-Infinity)",
                    "position": "absolute",
                    "transform": "scale(-Infinity)",
                  }
                }
              >
                JZ
              </span>
            </span>
          </Avatar>
        </Trigger>
      </Dropdown>
    </Dropdown>
  </span>
</Persona>
`;
